<xml xmlns="http://www.w3.org/1999/xhtml">
  <variables></variables>
  <block type="event_Start" id="}A_v`14$6amsK;Jm!`00" deletable="false" movable="false" x="336" y="108">
    <next>
      <block type="sensing_TurnLineTrackingLED" id="3LNx:`S%kh.=_siVM442">
        <field name="SWITCH">Ed.ON</field>
        <next>
          <block type="sensing_TurnObstacleBeam" id="x)ZHms3MC)-?.w5}tY4j">
            <field name="SWITCH">Ed.ON</field>
            <next>
              <block type="control_forever" id="gvx:;+vO#ueYITi~ksCq">
                <statement name="SUBSTACK">
                  <block type="control_if_else" id="8V/WIIpH**o3=%T6PD*^">
                    <value name="CONDITION">
                      <block type="sensing_LineTracker" id="c5+?RjH|K3=DeUqVAzyP">
                        <field name="SURFACE">WHITE</field>
                      </block>
                    </value>
                    <statement name="SUBSTACK">
                      <block type="drive_set_right_motor" id="fu5^Ap9~*hlW|su~x6Nw">
                        <field name="DIRECTION">Ed.FORWARD</field>
                        <value name="SPEED">
                          <shadow type="drive_speed_menu" id="?/(uc)6y`H%6e|m`WHLq">
                            <field name="SPEED_MENU">1</field>
                          </shadow>
                        </value>
                        <next>
                          <block type="drive_stop" id="6QPUUZ2V-5uav`lqixu1">
                            <field name="MOTOR">Ed.DriveLeftMotor</field>
                          </block>
                        </next>
                      </block>
                    </statement>
                    <statement name="SUBSTACK2">
                      <block type="control_if" id="ASF!vg`H~#e1$2(@,013">
                        <value name="CONDITION">
                          <block type="sensing_LineTracker" id=":W=d,qF%QfPj0sKtea+G">
                            <field name="SURFACE">BLACK</field>
                          </block>
                        </value>
                        <statement name="SUBSTACK">
                          <block type="drive_set_left_motor" id="K;VhSqt[9Y1`{gE~+r?l">
                            <field name="DIRECTION">Ed.FORWARD</field>
                            <value name="SPEED">
                              <shadow type="drive_speed_menu" id="cnu-]c){qjnvT)v{#lAJ">
                                <field name="SPEED_MENU">1</field>
                              </shadow>
                            </value>
                            <next>
                              <block type="drive_stop" id=".h)ZaK{eh;Gl!9uKuJ]M">
                                <field name="MOTOR">Ed.DriveRightMotor</field>
                              </block>
                            </next>
                          </block>
                        </statement>
                      </block>
                    </statement>
                    <next>
                      <block type="control_if" id="WgKWDe,~7`GKD$f^isZr">
                        <value name="CONDITION">
                          <block type="sensing_Obstacle" id="MCeU+9(tFqbLz43bF5=H">
                            <field name="OBS">DETECTED</field>
                          </block>
                        </value>
                        <statement name="SUBSTACK">
                          <block type="drive_stop" id="%td!ozNVOO*2R^*-%%*B">
                            <field name="MOTOR">Ed.Drive</field>
                            <next>
                              <block type="control_wait_until" id="UA$[`$$0_LbZ9E_p(zs_">
                                <value name="CONDITION">
                                  <block type="sensing_ClapDetected" id="1W^7p$sF**P.nq]dLQ-l"></block>
                                </value>
                              </block>
                            </next>
                          </block>
                        </statement>
                      </block>
                    </next>
                  </block>
                </statement>
              </block>
            </next>
          </block>
        </next>
      </block>
    </next>
  </block>
</xml>